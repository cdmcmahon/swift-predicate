#if !canImport(ObjectiveC)
import XCTest

extension AlwaysTests {
  // DO NOT MODIFY: This is autogenerated, use:
  //   `swift test --generate-linuxmain`
  // to regenerate.
  static let __allTests__AlwaysTests = [
    ("testAlways", testAlways),
  ]
}

extension AndTests {
  // DO NOT MODIFY: This is autogenerated, use:
  //   `swift test --generate-linuxmain`
  // to regenerate.
  static let __allTests__AndTests = [
    ("testAnd", testAnd),
  ]
}

extension ArrayTests {
  // DO NOT MODIFY: This is autogenerated, use:
  //   `swift test --generate-linuxmain`
  // to regenerate.
  static let __allTests__ArrayTests = [
    ("testDrop", testDrop),
    ("testFirstIndex", testFirstIndex),
    ("testLast", testLast),
    ("testLastIndex", testLastIndex),
    ("testPrefix", testPrefix),
    ("testSuffix", testSuffix),
  ]
}

extension EqualToTests {
  // DO NOT MODIFY: This is autogenerated, use:
  //   `swift test --generate-linuxmain`
  // to regenerate.
  static let __allTests__EqualToTests = [
    ("testEqualTo", testEqualTo),
  ]
}

extension NeverTests {
  // DO NOT MODIFY: This is autogenerated, use:
  //   `swift test --generate-linuxmain`
  // to regenerate.
  static let __allTests__NeverTests = [
    ("testNever", testNever),
  ]
}

extension OrTests {
  // DO NOT MODIFY: This is autogenerated, use:
  //   `swift test --generate-linuxmain`
  // to regenerate.
  static let __allTests__OrTests = [
    ("testOr", testOr),
  ]
}

extension PredicateTests {
  // DO NOT MODIFY: This is autogenerated, use:
  //   `swift test --generate-linuxmain`
  // to regenerate.
  static let __allTests__PredicateTests = [
    ("testPredicateFalse", testPredicateFalse),
    ("testPredicateTrue", testPredicateTrue),
  ]
}

extension PullbackTests {
  // DO NOT MODIFY: This is autogenerated, use:
  //   `swift test --generate-linuxmain`
  // to regenerate.
  static let __allTests__PullbackTests = [
    ("testPullback", testPullback),
  ]
}

extension SequenceTests {
  // DO NOT MODIFY: This is autogenerated, use:
  //   `swift test --generate-linuxmain`
  // to regenerate.
  static let __allTests__SequenceTests = [
    ("testAllSatisfy", testAllSatisfy),
    ("testContains", testContains),
    ("testDrop", testDrop),
    ("testFilter", testFilter),
    ("testFirst", testFirst),
    ("testMap", testMap),
    ("testPrefix", testPrefix),
  ]
}

extension XorTests {
  // DO NOT MODIFY: This is autogenerated, use:
  //   `swift test --generate-linuxmain`
  // to regenerate.
  static let __allTests__XorTests = [
    ("testXor", testXor),
  ]
}

extension ZipTests {
  // DO NOT MODIFY: This is autogenerated, use:
  //   `swift test --generate-linuxmain`
  // to regenerate.
  static let __allTests__ZipTests = [
    ("testZip", testZip),
  ]
}

public func __allTests() -> [XCTestCaseEntry] {
  return [
    testCase(AlwaysTests.__allTests__AlwaysTests),
    testCase(AndTests.__allTests__AndTests),
    testCase(ArrayTests.__allTests__ArrayTests),
    testCase(EqualToTests.__allTests__EqualToTests),
    testCase(NeverTests.__allTests__NeverTests),
    testCase(OrTests.__allTests__OrTests),
    testCase(PredicateTests.__allTests__PredicateTests),
    testCase(PullbackTests.__allTests__PullbackTests),
    testCase(SequenceTests.__allTests__SequenceTests),
    testCase(XorTests.__allTests__XorTests),
    testCase(ZipTests.__allTests__ZipTests),
  ]
}
#endif
