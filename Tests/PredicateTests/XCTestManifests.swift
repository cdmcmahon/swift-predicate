#if !canImport(ObjectiveC)
import XCTest

extension AlwaysTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AlwaysTests = [
        ("testAlways", testAlways),
    ]
}

extension AndTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__AndTests = [
        ("testAnd", testAnd),
    ]
}

extension EqualToTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EqualToTests = [
        ("testEqualTo", testEqualTo),
    ]
}

extension NeverTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__NeverTests = [
        ("testNever", testNever),
    ]
}

extension OrTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__OrTests = [
        ("testOr", testOr),
    ]
}

extension PredicateTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PredicateTests = [
        ("testCallableValue", testCallableValue),
        ("testPredicateFalse", testPredicateFalse),
        ("testPredicateTrue", testPredicateTrue),
    ]
}

extension PullbackTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PullbackTests = [
        ("testPullback", testPullback),
    ]
}

extension XorTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__XorTests = [
        ("testXor", testXor),
    ]
}

extension ZipTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ZipTests = [
        ("testZip", testZip),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(AlwaysTests.__allTests__AlwaysTests),
        testCase(AndTests.__allTests__AndTests),
        testCase(EqualToTests.__allTests__EqualToTests),
        testCase(NeverTests.__allTests__NeverTests),
        testCase(OrTests.__allTests__OrTests),
        testCase(PredicateTests.__allTests__PredicateTests),
        testCase(PullbackTests.__allTests__PullbackTests),
        testCase(XorTests.__allTests__XorTests),
        testCase(ZipTests.__allTests__ZipTests),
    ]
}
#endif
